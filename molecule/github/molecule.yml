---
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
    ignore-errors: true

driver:
  name: podman
    managed: true
    platform_name: ${MOLECULE_PLATFORM:-all}

# these are the customized instances build by my test_containers repos.
# These should have a running systemd, prepared ssh, with enough tooling
# to get status.
#
# - I did not create the base image, only added layers.
#
platforms:
  - name: "uut-ct0"
    image: "ghcr.io/jackaltx/testing-containers/debian12-ssh:latest"
    network: "monitoring-net"
    command: "/sbin/init"
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    ssh_host: "127.0.0.1"
    ssh_port: 2223
    ssh_user: "jackaltx"
    connection: ssh

  - name: "uut-ct1"
    image: "ghcr.io/jackaltx/testing-containers/rocky93-ssh:latest"
    network: "monitoring-net"
    command: "/sbin/init"
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    ssh_host: "127.0.0.1"
    ssh_port: 2222
    ssh_user: "jackaltx"
    connection: ssh

  # ubuntu image is a problem on github, not locally on my Fedora development machine.

  # - name: "uut-ct2"
  #   image: "ghcr.io/jackaltx/testing-containers/ubuntu24-ssh:latest"
  #   network: monitoring-net
  #   command: "/sbin/init"
  #   privileged: true
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:rw
  #   cgroupns_mode: host
  #   ssh_host: "127.0.0.1"
  #   ssh_port: 2224
  #   ssh_user: "jackaltx"
  #   connection: ssh

provisioner:
  name: ansible
  env:
    ANSIBLE_FORCE_COLOR: "1"
  log: true
  config_options:
    defaults:
      interpreter_python: auto_silent
      host_key_checking: false
      remote_tmp: /tmp/ansible-tmp
      local_tmp: /tmp/ansible-tmp
  playbooks:
    prepare: "../shared/podman/prepare.yml"
    converge: "../shared/podman/converge.yml"
    verify: "../shared/verify/main.yml"
  inventory:
    group_vars:
      all:
        # ansible_user: ansible
        proxmox_vmid: 9100
        project_root: ${MOLECULE_PROJECT_DIRECTORY}
        report_root: ${MOLECULE_PROJECT_DIRECTORY}/verify_output

        # SMELL hard coded for now
        testing_capabilities: "{{ lookup('env', 'MOLECULE_CAPABILITIES', default='logs,metrics') | split(',') }}"

        # metrics
        influxdb_test: true
        influxdb_configure: true
        telgraf2influxdb_configs:
          localhost:
            url: "http://127.0.0.1"
            token: ""
            bucket: "telegraf"
            org: "lavnet"
            namedrop: '["influxdb_oss"]'
            bucket_tag: ""
            exclude_bucket_tag: ""
            ping_timeout: "0s"
            read_idle_timeout: "0s"
            insecure_skip_verify: false

        # logs
        loki_local_storage: true
        alloy_loki_endpoint: "127.0.0.1"

scenario:
  name: github
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy

verifier:
  name: ansible
